/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.52
 * Generated at: 2022-05-03 16:51:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class user_002ddashboard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write(" <head>\n");
      out.write("    <meta charset=\"UTF-8\" />\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n");
      out.write("    <title>user-dashboard!!!!</title>\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print( request.getContextPath() );
      out.write("/commons/styles/style.css\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print( request.getContextPath() );
      out.write("/commons/fonts/css/all.css\" />\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print( request.getContextPath() );
      out.write("/commons/styles/user-dashboard.css\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print( request.getContextPath() );
      out.write("/commons/trix/trix.css\">\n");
      out.write("     <script src=\"");
      out.print( request.getContextPath() );
      out.write("/commons/trix/trix.js\"></script>\n");
      out.write("     <script src=\"");
      out.print( request.getContextPath() );
      out.write("/commons/js/jquery.js\"></script>\n");
      out.write("  </head>\n");
      out.write("  <body>\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/commons/headers/loading.jsp", out, false);
      out.write("\n");
      out.write("     ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/commons/headers/header.jsp", out, false);
      out.write("\n");
      out.write("     <section>\n");
      out.write("       <div class=\"profile-cover-container\">\n");
      out.write("    <section class=\"cover-picture\">\n");
      out.write("      <div class=\"cover-picture-section\">\n");
      out.write("       <img src=\"\" alt=\"\" class=\"cover-image\">\n");
      out.write("       <img src=\"\" alt=\"\" class=\"profile-image\">\n");
      out.write("      </div>\n");
      out.write("      </section>\n");
      out.write("      <div class=\"edit-profile\">\n");
      out.write("        <span class=\"edit-profile-button\" hidden>\n");
      out.write("          <span id=\"edit-icon\" style=\"margin-right: 5px;\"><i class=\"fa-solid fa-pencil\"></i></span><span>Edit Profile</span>\n");
      out.write("        </span>\n");
      out.write("      </div>\n");
      out.write("    </div>\n");
      out.write("  <section class=\"main-body-container\">\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/commons/headers/nav-bar-menu.jsp", out, false);
      out.write("\n");
      out.write("        \n");
      out.write("      <section class=\"bio\">\n");
      out.write("        <div class=\"bio-container\">\n");
      out.write("          <div class=\"bio-wrapper\">\n");
      out.write("            <div style=\"text-align: center;\"><h3 id=\"user-name\"></h3></div>\n");
      out.write("            <div style=\"text-align: center;\">I am who i am by the grace of God</div>\n");
      out.write("          </div>\n");
      out.write("        </div>\n");
      out.write("      </section>\n");
      out.write("\n");
      out.write("      <section class=\"create-blog-body\" hidden>\n");
      out.write("        <section class=\"section\">\n");
      out.write("         <select name=\"\" id=\"category\" style=\"width: 100%;margin-bottom:15px; border-radius: 6px;height: 50px; text-align: center;\">\n");
      out.write("           <option value=\"\" disabled selected>Pick a category</option>\n");
      out.write("           <option value=\"Romance\">Romance</option>\n");
      out.write("         </select>\n");
      out.write("          </section>\n");
      out.write("        <section class=\"headline\">\n");
      out.write("        <textarea type=\"text\" name=\"headline\" id=\"headline\" style=\"width: 100%;margin-bottom:15px; border-radius: 6px;height: 50px; word-wrap: break-word;\" placeholder=\"HEADLINE........................!!!!!!!!\"></textarea>\n");
      out.write("\n");
      out.write("        </section>\n");
      out.write("        <div class=\"create-blog-container\">\n");
      out.write("          <form method=\"post\">\n");
      out.write("            <div style=\"background-color: white; border-radius: 8px;padding: 10px;\">\n");
      out.write("            <input id=\"x\" type=\"hidden\" name=\"content\" value=\"\" />\n");
      out.write("            <trix-editor input=\"x\" id=\"textInput\"></trix-editor>\n");
      out.write("            <div style=\"text-align: end; margin: 10px 0; padding: 10px;\"> <input type=\"button\" name=\"submit\" value=\"Submit\" id=\"submit-post\"/></div>\n");
      out.write("           \n");
      out.write("          </div>\n");
      out.write("        </form>\n");
      out.write("        </div>\n");
      out.write("      </section>\n");
      out.write("      <section class=\"author-post\" style=\"margin:30px 0;\">\n");
      out.write("      </section>\n");
      out.write("  </section>\n");
      out.write("\n");
      out.write("      <div class=\"profile-edit-page\" hidden>\n");
      out.write("     \n");
      out.write("       <div class=\"profile-edit-page-container\">\n");
      out.write("         <div class=\"edit-profile-img-modal\" hidden>\n");
      out.write("          <div class=\"uploaad-profile-img\">\n");
      out.write("            <div class=\"uploaad-profile-img-container\">\n");
      out.write("               <input type=\"file\" name=\"\"  accept=\"image/png, image/jpeg\" id=\"profile-img-input\"> <input type=\"submit\" value=\"upload\" id=\"upload-profile-img\">\n");
      out.write("            </div>\n");
      out.write("          </div>\n");
      out.write("         </div>\n");
      out.write("         <div class=\"edit-cover-img-modal\" hidden>\n");
      out.write("          <div class=\"uploaad-cover-img\" >\n");
      out.write("            <div class=\"uploaad-cover-img-container\">\n");
      out.write("               <input type=\"file\" name=\"\"  accept=\"image/png, image/jpeg\" id=\"cover-img-input\"> <input type=\"submit\" value=\"upload\" id=\"upload-cover-img\">\n");
      out.write("            </div>\n");
      out.write("          </div>\n");
      out.write("         </div>\n");
      out.write("\n");
      out.write("\n");
      out.write("         <div class=\"edit-profile-pagetile\">\n");
      out.write("           <div class=\"title-content\">\n");
      out.write("             Edit Profile\n");
      out.write("           </div>\n");
      out.write("         <div class=\"close-button\"><span id=\"close-button\"><i class=\"fa-solid fa-times\"></i></span></div>\n");
      out.write("         </div>\n");
      out.write("         <hr>\n");
      out.write("         <br>\n");
      out.write("         <div class=\"edit-profile-container\">\n");
      out.write("           <div class=\"heading\">\n");
      out.write("             <div class=\"section-to-edit\"><h3>Edit profile Image</h3></div>\n");
      out.write("             <div class=\"edit-section\"><h4 id=\"edit-profile-image\">Edit</h4></div>\n");
      out.write("           </div>\n");
      out.write("           <div class=\"content-to-edit\">\n");
      out.write("             <div class=\"edit-content\">\n");
      out.write("                  <img src=\"\" alt=\"\" class=\"profile-image-to-edit\">\n");
      out.write("             </div>\n");
      out.write("           </div>\n");
      out.write("         </div>\n");
      out.write("         <div class=\"edit-profile-container\">\n");
      out.write("          <div class=\"heading\">\n");
      out.write("            <div class=\"section-to-edit\"><h3>Edit cover Image</h3></div>\n");
      out.write("            <div class=\"edit-section\"><h4 id=\"edit-cover-img\">Edit</h4></div>\n");
      out.write("          </div>\n");
      out.write("          <div class=\"content-to-edit\">\n");
      out.write("            <div class=\"edit-content\">\n");
      out.write("                 <img src=\"\" alt=\"\" class=\"cover-image-to-edit\">\n");
      out.write("            </div>\n");
      out.write("          </div>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"edit-profile-container\">\n");
      out.write("          <div class=\"heading\">\n");
      out.write("            <div class=\"section-to-edit\"><h3>Bio</h3></div>\n");
      out.write("            <div class=\"edit-section\"><h4>Add</h4></div>\n");
      out.write("          </div>\n");
      out.write("          <div class=\"content-to-edit\">\n");
      out.write("            <div class=\"edit-content\">\n");
      out.write("                <span>Describe yourself</span>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"main-content-container\">\n");
      out.write("              <div>Bio</div>\n");
      out.write("            </div>\n");
      out.write("          </div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("\n");
      out.write("       </div>\n");
      out.write("      </div>\n");
      out.write("    \n");
      out.write("     </section>\n");
      out.write("     <script src=\"");
      out.print( request.getContextPath() );
      out.write("/commons/js/nav-bar-collapse.js\"></script>\n");
      out.write("      ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/commons/footer/footer.jsp", out, false);
      out.write("\n");
      out.write("      <script>\n");
      out.write("        setTimeout(()=>{\n");
      out.write("       $(\"#page-load\").hide()\n");
      out.write("   },800)\n");
      out.write("let query = window.location.search;\n");
      out.write("let urlParams = new URLSearchParams(query);\n");
      out.write("let email = urlParams.get(\"email\")\n");
      out.write("let urlData =\"\";\n");
      out.write("let API_KEY = \"\";\n");
      out.write("let userData ={};\n");
      out.write("profileModal = document.getElementsByClassName(\"edit-profile-img-modal\")\n");
      out.write("covereModal = document.getElementsByClassName(\"edit-cover-img-modal\")\n");
      out.write("\n");
      out.write("   $(\".login-wrapper\").hide();  \n");
      out.write("   $(\"#edit-profile-image\").on(\"click\",()=>{\n");
      out.write("         $(\".edit-profile-img-modal\").fadeIn(200)\n");
      out.write("       })\n");
      out.write("       $(\"#edit-cover-img\").on(\"click\",()=>{\n");
      out.write("         $(\".edit-cover-img-modal\").fadeIn(200)\n");
      out.write("       })\n");
      out.write("       //load data from db\n");
      out.write("       loadUserData();\n");
      out.write("\n");
      out.write("\n");
      out.write("       window.onclick = (e)=>{\n");
      out.write("      \n");
      out.write("        if(e.target== profileModal[0]){\n");
      out.write("      \n");
      out.write("           $(\".edit-profile-img-modal\").fadeOut(200)\n");
      out.write("        }\n");
      out.write("        if(e.target== covereModal[0]){\n");
      out.write("           $(\".edit-cover-img-modal\").fadeOut(200)\n");
      out.write("        }\n");
      out.write("       }\n");
      out.write("       $(\".edit-profile-button\").on(\"click\",()=>{\n");
      out.write("         $(\".profile-edit-page\").fadeIn();\n");
      out.write("       })\n");
      out.write("       $(\"#close-button\").on(\"click\",()=>{\n");
      out.write("         $(\".profile-edit-page\").fadeOut();\n");
      out.write("       })\n");
      out.write("\n");
      out.write("       $(\"#upload-profile-img\").on(\"click\",(e)=>{\n");
      out.write("        e.preventDefault();\n");
      out.write("         formData(\"profile-img-input\")\n");
      out.write("       })\n");
      out.write("\n");
      out.write("       $(\"#upload-cover-img\").on(\"click\",(e)=>{\n");
      out.write("        e.preventDefault();\n");
      out.write("        formData(\"cover-img-input\")\n");
      out.write("\n");
      out.write("       })\n");
      out.write("\n");
      out.write("$(\"#submit-post\").on(\"click\",(e)=>{\n");
      out.write(" let x = document.getElementById(\"x\");\n");
      out.write(" let textInput = document.getElementById(\"textInput\")\n");
      out.write(" e.preventDefault();\n");
      out.write(" if(((x.value!=\"\") ) && (userData.userDetails[\"email\"]==userData.authentication)){\n");
      out.write("   const data = {\n");
      out.write("     userId:userData.userDetails[\"id\"],\n");
      out.write("     post:$(\"#x\").val(),\n");
      out.write("     headLine: $(\"#headline\").val(),\n");
      out.write("     category: $(\"#category\").val()\n");
      out.write("   }\n");
      out.write("   createPost(data)\n");
      out.write("   textInput.value=\"\";\n");
      out.write(" }\n");
      out.write("\n");
      out.write("})\n");
      out.write("\n");
      out.write("async function createPost(data){\n");
      out.write("  try{\n");
      out.write(" const resp = await fetch(\"/create_post\",{\n");
      out.write("   method:\"POST\",\n");
      out.write("   headers:{\n");
      out.write("     \"content-type\":\"application/json\"\n");
      out.write("   },\n");
      out.write("   body:JSON.stringify(data)\n");
      out.write(" })\n");
      out.write(" const jsonResp = await resp;\n");
      out.write(" console.log(jsonResp)\n");
      out.write("  }catch{\n");
      out.write("    console.log(e);\n");
      out.write("  }\n");
      out.write("\n");
      out.write("}\n");
      out.write("\n");
      out.write("function formData(elem){\n");
      out.write("  let file = document.getElementById(elem).files;\n");
      out.write("        let  data = new FormData();\n");
      out.write("        data.append(\"file\",file[0])\n");
      out.write("          data.append(\"api_key\",API_KEY)\n");
      out.write("          data.append(\"timestamp\",Date.now())\n");
      out.write("          data.append(\"upload_preset\",\"v12frawa\")\n");
      out.write("          data.append(\"folder\",\"samples\")\n");
      out.write("          if(elem==\"profile-img-input\"){\n");
      out.write("            uploadProfileImg(data)\n");
      out.write("          }else{\n");
      out.write("            uploadCoverImg(data);\n");
      out.write("          }\n");
      out.write("         \n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("async function loadUserData(){\n");
      out.write("         try{\n");
      out.write("           const resp = await fetch(\"/load_user_by_email\",{\n");
      out.write("           method:\"POST\",\n");
      out.write("           headers:{\n");
      out.write("             \"content-type\":\"www-x-form-urlencoded\"\n");
      out.write("           },\n");
      out.write("           body:email,\n");
      out.write("         })\n");
      out.write("         userData = await resp.json();\n");
      out.write("        console.log(userData)\n");
      out.write("        API_KEY = userData.api_KEY;\n");
      out.write("        console.log(userData.userDetails[\"firstName\"])\n");
      out.write("        $(\"#user-name\").append(userData.userDetails[\"firstName\"])\n");
      out.write("        if(userData.authentication!=\"anonymousUser\"){\n");
      out.write("       $(\".user-profile-image\").attr(\"src\",userData.logInUser[\"profile_pics\"])\n");
      out.write("       $(\".user-profile-name\").append(userData.logInUser[\"firstName\"]);\n");
      out.write("       $(\".user-anchor-link\").attr(\"href\",\"");
      out.print( request.getContextPath() );
      out.write("/views/user-dashboard.jsp?email=\"+userData.logInUser[\"email\"]);\n");
      out.write("       $(\".right-bar-wrapper\").show();\n");
      out.write("       $(\".login-wrapper\").hide();\n");
      out.write("        }else{\n");
      out.write("         $(\".login-wrapper\").show();  \n");
      out.write("        }\n");
      out.write("        if(userData.userDetails[\"email\"]==userData.authentication){\n");
      out.write("      $(\".create-blog-body\").show();\n");
      out.write("     $(\".edit-profile-button\").show();\n");
      out.write("  \n");
      out.write("         }\n");
      out.write("\n");
      out.write("        $(\".profile-image\").attr(\"src\",userData.userDetails[\"profile_pics\"])\n");
      out.write("       $(\".profile-image-to-edit\").attr(\"src\",userData.userDetails[\"profile_pics\"])\n");
      out.write("       $(\".cover-image\").attr(\"src\",userData.userDetails[\"cover_pics\"])\n");
      out.write("       $(\".cover-image-to-edit\").attr(\"src\",userData.userDetails[\"cover_pics\"]);\n");
      out.write("       LoadAndCrsteUserPosts(userData)    \n");
      out.write(" }\n");
      out.write(" catch(e){\n");
      out.write("          console.log(e)\n");
      out.write("         }\n");
      out.write("       }\n");
      out.write("\n");
      out.write("async function uploadProfileImgToDb(data){\n");
      out.write("         console.log(data);\n");
      out.write("          const resp = await fetch(\"/upload_profile\",{\n");
      out.write("            method:\"POST\",\n");
      out.write("            headers:{\n");
      out.write("             \"content-type\":\"application/json\"\n");
      out.write("            },\n");
      out.write("            body:JSON.stringify(data)\n");
      out.write("          });\n");
      out.write("          const jsonResp2 = await resp.json();\n");
      out.write("          console.log(jsonResp2);\n");
      out.write("           if(jsonResp2==\"upload successfull\"){\n");
      out.write("             $(\".edit-profile-img-modal\").fadeOut(200)\n");
      out.write("           }\n");
      out.write("       }\n");
      out.write("async function uploadProfileImg(data){\n");
      out.write("         const resp = await fetch(\"https://api.cloudinary.com/v1_1/yage/upload\",{\n");
      out.write("           method:\"POST\",\n");
      out.write("           body:data\n");
      out.write("         })\n");
      out.write("         const jsonResp = await resp.json();\n");
      out.write("        urlData = (jsonResp.url)\n");
      out.write("        if(urlData!=undefined){\n");
      out.write("          $(\".profile-image\").attr(\"src\",urlData)\n");
      out.write("          $(\".profile-image-to-edit\").attr(\"src\",urlData)\n");
      out.write("          $(\".user-profile-image\").attr(\"src\",urlData)\n");
      out.write("         data= {\n");
      out.write("         profileImageUrl:urlData\n");
      out.write("         }\n");
      out.write("         uploadProfileImgToDb(data);\n");
      out.write("        }\n");
      out.write("       }\n");
      out.write("       async function uploadCoverImg(data){\n");
      out.write("         const resp = await fetch(\"https://api.cloudinary.com/v1_1/yage/upload\",{\n");
      out.write("           method:\"POST\",\n");
      out.write("           body:data\n");
      out.write("         })\n");
      out.write("         const jsonResp = await resp.json();\n");
      out.write("        urlData = (jsonResp.url)\n");
      out.write("        if(urlData!=undefined){\n");
      out.write("          $(\".cover-image\").attr(\"src\",urlData)\n");
      out.write("          $(\".cover-image-to-edit\").attr(\"src\",urlData)\n");
      out.write("         data= {\n");
      out.write("           coverImageUrl:urlData\n");
      out.write("         }\n");
      out.write("         uploadcoverImgToDb(data);\n");
      out.write("        }\n");
      out.write("       }\n");
      out.write(" async function uploadcoverImgToDb(data){\n");
      out.write("          const resp = await fetch(\"/upload_cover\",{\n");
      out.write("            method:\"POST\",\n");
      out.write("            headers:{\n");
      out.write("             \"content-type\":\"application/json\"\n");
      out.write("            },\n");
      out.write("            body:JSON.stringify(data)\n");
      out.write("          });\n");
      out.write("          const jsonResp2 = await resp.json();\n");
      out.write("          console.log(jsonResp2);\n");
      out.write("           if(jsonResp2==\"upload successfull\"){\n");
      out.write("             $(\".edit-cover-img-modal\").fadeOut(200)\n");
      out.write("           }\n");
      out.write("       }\n");
      out.write("       function LoadAndCrsteUserPosts(userData){\n");
      out.write("         let toolbarCounter = 2;\n");
      out.write("   for (let index = 0; index < userData.userPost.length; index++) {\n");
      out.write("     let posts_container  =  document.createElement(\"div\");\n");
      out.write("     posts_container.setAttribute(\"class\",\"post-body\")\n");
      out.write("     posts_container.setAttribute(\"posistion\",\"relative\")\n");
      out.write("     let post_cover =  document.createElement(\"div\");\n");
      out.write("     post_cover.setAttribute(\"class\",\"post-cover\")\n");
      out.write("     post_cover.setAttribute(\"id\",\"post-cover\"+index)\n");
      out.write("     posts_container.setAttribute(\"posistion\",\"relative\")\n");
      out.write("\n");
      out.write("     let post_body =  document.createElement(\"trix-editor\");\n");
      out.write("      post_body.setAttribute(\"id\",\"post-body\"+index)\n");
      out.write("      post_body.setAttribute(\"input\",\"x\"+index)\n");
      out.write("      post_body.setAttribute(\"disabled\", true)\n");
      out.write("      post_body.style.wordBreak=\"break-all\"\n");
      out.write("      post_body.style.wordWrap=\"break-word\"\n");
      out.write("      post_body.style.pointerEvents= false\n");
      out.write("      post_body.contentEditable = false\n");
      out.write("      let input =  document.createElement(\"input\");\n");
      out.write("     input.setAttribute(\"id\",\"x\"+index)\n");
      out.write("     input.setAttribute(\"type\",\"hidden\")\n");
      out.write("     posts_container.append(input);\n");
      out.write("     posts_container.append(post_body);\n");
      out.write("     input.value=userData.userPost[index][\"post\"];\n");
      out.write("     $(\".author-post\").append(posts_container);\n");
      out.write("\n");
      out.write("            document.querySelector(\"figcaption\").style.display= \"none\";\n");
      out.write(" \n");
      out.write("             let arr =[];\n");
      out.write("             for(y=0;y<userData.allComments.length;y++){\n");
      out.write("               if(userData.allComments[y][\"postId\"]==userData.userPost[index][\"id\"]){\n");
      out.write("                 arr.push(userData.allComments[y])\n");
      out.write("               }\n");
      out.write("             }\n");
      out.write("             let comments =   $(\"<div>\",{\n");
      out.write("          id:1,\n");
      out.write("          class:\"comments\",\n");
      out.write("        });\n");
      out.write("        let comments_likes =  $('<div>',{\n");
      out.write("            class:\"comments-likes\",\n");
      out.write("          });\n");
      out.write("          like =  $('<div>',{\n");
      out.write("            class:\"like\",\n");
      out.write("          });\n");
      out.write("          let post_like_container =  $('<span>',{\n");
      out.write("           id:\"post-like-container\"+index\n");
      out.write("          });\n");
      out.write("\n");
      out.write("       let post_like = $('<i>',{\n");
      out.write("            class:\"fa-regular fa-thumbs-up icon-class\",\n");
      out.write("           id:\"post-like\"+index\n");
      out.write("          });\n");
      out.write("        let   post_like_counts =$('<span>',{\n");
      out.write("               id:\"post-like-counts\"+index,\n");
      out.write("               text:\"  \"+30 +\"  likes\"\n");
      out.write("             })\n");
      out.write("          \n");
      out.write("          let comments_count=$('<section>',{\n");
      out.write("               class:\"comments-count\"\n");
      out.write("             })\n");
      out.write("\n");
      out.write("             let show_comment =$('<i>',{\n");
      out.write("               class:\"fa-regular fa-comment icon-class\",\n");
      out.write("               id:\"show_comment \"+index\n");
      out.write("             })\n");
      out.write("\n");
      out.write("            let  post_comment_counts =$('<span>',{\n");
      out.write("               id:\"post-comment-counts\"+index,\n");
      out.write("               text:\"  \" +arr.length+\"  coments\"\n");
      out.write("             })\n");
      out.write("\n");
      out.write("             post_like_container .append(post_like)\n");
      out.write("             like.append(post_like_container );\n");
      out.write("             like.append(post_like_counts)\n");
      out.write("             comments_likes.append(like)\n");
      out.write("             comments_count.append(show_comment)\n");
      out.write("             comments_count.append(post_comment_counts)\n");
      out.write("             comments_likes.append(comments_count)\n");
      out.write("             $(\".author-post\").append(comments_likes)\n");
      out.write("   \n");
      out.write("       }\n");
      out.write("\n");
      out.write("     for (let index = 0; index < userData.userPost.length; index++) {\n");
      out.write("      let toolbar = document.getElementById(\"trix-toolbar-\"+(toolbarCounter))\n");
      out.write("      toolbar.style.display=\"none\"\n");
      out.write("      console.log(toolbarCounter)\n");
      out.write("      toolbarCounter++;\n");
      out.write("      \n");
      out.write("    }\n");
      out.write("   \n");
      out.write("\n");
      out.write("  }\n");
      out.write("\n");
      out.write("  (function() {\n");
      out.write("   var HOST = \"https://api.cloudinary.com/v1_1/yage/upload\"\n");
      out.write("       \n");
      out.write("   addEventListener(\"trix-attachment-add\", function(event) {\n");
      out.write("       if (event.attachment.file) {\n");
      out.write("           uploadFileAttachment(event.attachment)\n");
      out.write("       }\n");
      out.write("   })\n");
      out.write(" \n");
      out.write("   function uploadFileAttachment(attachment) {\n");
      out.write("       uploadFile(attachment.file, setProgress, setAttributes)\n");
      out.write(" \n");
      out.write("       function setProgress(progress) {\n");
      out.write("           attachment.setUploadProgress(progress)\n");
      out.write("       }\n");
      out.write(" \n");
      out.write("       function setAttributes(attributes) {\n");
      out.write("         console.log(attributes)\n");
      out.write("           attachment.setAttributes(attributes)\n");
      out.write("       }\n");
      out.write("   }\n");
      out.write(" \n");
      out.write("   function uploadFile(file, progressCallback, successCallback) {\n");
      out.write("       var formData = createFormData(file)\n");
      out.write("       var xhr = new XMLHttpRequest()\n");
      out.write(" \n");
      out.write("       xhr.open(\"POST\", HOST, true)\n");
      out.write(" \n");
      out.write("       xhr.upload.addEventListener(\"progress\", function(event) {\n");
      out.write("           var progress = event.loaded / event.total * 100\n");
      out.write("           progressCallback(progress)\n");
      out.write("       })\n");
      out.write(" \n");
      out.write("       xhr.addEventListener(\"load\", function(event) {\n");
      out.write("       \n");
      out.write("         let jsonData =JSON.parse(xhr.responseText);\n");
      out.write("           var attributes = {\n");
      out.write("               url: jsonData.url,\n");
      out.write("               href:jsonData.url + \"?content-disposition=attachment\"\n");
      out.write("           }\n");
      out.write("           successCallback(attributes)\n");
      out.write("       })\n");
      out.write(" \n");
      out.write("       xhr.send(formData)\n");
      out.write("   }\n");
      out.write(" \n");
      out.write("   function createFormData(file) {\n");
      out.write("       var data = new FormData()\n");
      out.write("       data.append(\"file\", file)\n");
      out.write("       data.append(\"api_key\",API_KEY)\n");
      out.write("       data.append(\"timestamp\",Date.now())\n");
      out.write("       data.append(\"upload_preset\",\"v12frawa\")\n");
      out.write("       data.append(\"folder\",\"samples\")\n");
      out.write("       return data\n");
      out.write("   }\n");
      out.write("})();\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("     </script>\n");
      out.write("\n");
      out.write("  </body>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
