/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.52
 * Generated at: 2022-04-24 06:19:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class post_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("  <head>\n");
      out.write("    <meta charset=\"UTF-8\" />\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n");
      out.write("    <title>Frontpage!</title>\n");
      out.write("     <link rel=\"stylesheet\" href=\"");
      out.print( request.getContextPath() );
      out.write("/commons/styles/style.css\" />\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print( request.getContextPath() );
      out.write("/commons/fonts/css/all.css\" />\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print( request.getContextPath() );
      out.write("/commons/styles/post.css\" />\n");
      out.write("  </head>\n");
      out.write("  <body>\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/commons/headers/loading.jsp", out, false);
      out.write('\n');
      out.write(' ');
      out.write(' ');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/commons/headers/header.jsp", out, false);
      out.write("\n");
      out.write("    <section class=\"post-container\" style=\"margin-bottom: 50px;\">\n");
      out.write("      <section class=\"post\">\n");
      out.write("        <section class=\"author-profile\">\n");
      out.write("          <div class=\"author-image\">\n");
      out.write("            <a href=\"\" id=\"author-image-container\">\n");
      out.write("            \n");
      out.write("                <span\n");
      out.write("                ><img src=\"\" class=\"author-pic\" alt=\"\"\n");
      out.write("              /></span>\n");
      out.write("              <h5 id=\"bloger-name\"></h5>\n");
      out.write("        \n");
      out.write("            </a>\n");
      out.write("  \n");
      out.write("           \n");
      out.write("          </div>\n");
      out.write("          <div class=\"author-milage\">\n");
      out.write("            <h5 style=\"padding: 5px\">\n");
      out.write("              headliners:<span class=\"badges\">30</span>\n");
      out.write("            </h5>\n");
      out.write("            <div style=\"padding: 5px\">\n");
      out.write("              <h5>Total posts <span class=\"badges\">100</span></h5>\n");
      out.write("            </div>\n");
      out.write("          </div>\n");
      out.write("        </section>\n");
      out.write("        <section class=\"author-post\">\n");
      out.write("          <article id=\"post-body\">\n");
      out.write("          </article>\n");
      out.write("        </section>\n");
      out.write("        <section class=\"comments-likes\">\n");
      out.write("          <div class=\"like\">\n");
      out.write("            <i class=\"fa-regular fa-thumbs-up icon-class\" id=\"post-like\"></i\n");
      out.write("            ><span id=\"like-counts\">10</span>\n");
      out.write("          </div>\n");
      out.write("          <div class=\"comments-count\">\n");
      out.write("            <i class=\"fa-regular fa-comment icon-class\" id=\"post-comment\"></i\n");
      out.write("            ><span id=\"comment-counts\">10</span>\n");
      out.write("          </div>\n");
      out.write("        </section>\n");
      out.write("      </section>\n");
      out.write("      <section class=\"comments\">\n");
      out.write("        <div class=\"comments-wraper\">\n");
      out.write("          <div style=\"text-align: end\">\n");
      out.write("            <i class=\"fa-solid fa-ellipsis-vertical edit icon-class\"></i>\n");
      out.write("          </div>\n");
      out.write("          <h6 class=\"commenter-name\">Bunmi Ofunrein</h6>\n");
      out.write("          <div class=\"comment-section\">\n");
      out.write("            <img src=\"/resources/images/14.jpg \" class=\"comment-author\" alt=\"\" />\n");
      out.write("            <div class=\"comment-content\">\n");
      out.write("              we had with them and we are not going to rest until we get the\n");
      out.write("              last person of these hoodlums, because we cannot be watching\n");
      out.write("              anyone making life difficult for members of the public,\" the PPRO\n");
      out.write("              stated. â€œThe Commissioner of Police has put all Area Commanders\n");
      out.write("              and all tactical team commanders on the red alert that they should\n");
      out.write("              go out and take the battle to the doorsteps of these hoodlums. We\n");
      out.write("              must fish them out one after the other. \"Any house that is\n");
      out.write("              harbouring any of these criminals, the landlords of such houses\n");
      out.write("              will be seriously\n");
      out.write("            </div>\n");
      out.write("          </div>\n");
      out.write("          <section class=\"reply-likes\">\n");
      out.write("            <div class=\"like\">\n");
      out.write("              <i class=\"fa-regular fa-thumbs-up icon-class\" id=\"comment-like\"></i\n");
      out.write("              ><span id=\"comment-like-counts\">10</span>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"comments-count\">\n");
      out.write("              <!-- <span class=\"icon-class\" id=\"reply\">reply</span> -->\n");
      out.write("            <span id=\"comment-comment-counts\">10</span>\n");
      out.write("            </div>\n");
      out.write("          </section>\n");
      out.write("        </div>\n");
      out.write("      </section>\n");
      out.write("    </section>\n");
      out.write("    <script src=\"../commons/js/jquery.js\"></script>\n");
      out.write("    <script>\n");
      out.write("      $(document).ready(()=>{\n");
      out.write("        setTimeout(()=>{\n");
      out.write("        $(\"#page-load\").hide()\n");
      out.write("    },500)\n");
      out.write("        let data = {};\n");
      out.write("      query = window.location.search;\n");
      out.write("      urlParams = new URLSearchParams(query);\n");
      out.write("      console.log(urlParams.get(\"id\"))\n");
      out.write("      id = urlParams.get(\"id\");\n");
      out.write("      async function fetchPost(id){\n");
      out.write("         const resp = await fetch(\"/post\",{\n");
      out.write("           method: \"POST\",\n");
      out.write("           headers:{\n");
      out.write("             \"content-type\":\"x-wwww-form-urlencoded\"\n");
      out.write("           },\n");
      out.write("           body:id\n");
      out.write("         })\n");
      out.write("         jsonResp = await resp.json();\n");
      out.write("         data=jsonResp;\n");
      out.write("         console.log(data);\n");
      out.write("         if(data.user!==\"anonymousUser\"){\n");
      out.write("          $(\"#login-wrapper\").hide();  \n");
      out.write("        $(\"#right-bar-wrapper\").show();\n");
      out.write("        $(\"#user-profile-image\").attr(\"src\",data.userDetails[\"profile_pics\"])\n");
      out.write("        $(\"#user-profile-name\").append(data.userDetails[\"firstName\"]);\n");
      out.write("        $(\"#user-anchor-link\").attr(\"href\",\"");
      out.print( request.getContextPath() );
      out.write("/views/user-dashboard.jsp?email=\"+data.userDetails[\"email\"]);\n");
      out.write("             }\n");
      out.write("         $(\"#bloger-name\").append(data.post[\"firstName\"])\n");
      out.write("       $(\".author-pic\").attr(\"src\",data.post[\"profilePics\"]);\n");
      out.write("       $(\"#post-body\").append(data.post[\"post\"])\n");
      out.write("       $(\"#author-image-container\").attr(\"href\",\"");
      out.print( request.getContextPath() );
      out.write("/views/user-dashboard.jsp?email=\"+data.post[\"email\"])\n");
      out.write("      }\n");
      out.write("      fetchPost(id)\n");
      out.write(" \n");
      out.write("\n");
      out.write("      })\n");
      out.write("      \n");
      out.write("    </script>\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/commons/footer/footer.jsp", out, false);
      out.write("\n");
      out.write("  </body>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
